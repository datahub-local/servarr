apiVersion: batch/v1
kind: Job
metadata:
  name: jellyfin-init
  labels:
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    #{{- if not .Values.argoCD }}
    helm.sh/hook: post-install
    #{{- if not .Values.debug }}
    helm.sh/hook-delete-policy: hook-failed
    #{{- end }}
    helm.sh/hook-weight: "30"
    #{{- end }}

    #{{- if .Values.argoCD }}
    argocd.argoproj.io/sync-wave: "30"
    #{{- end }}
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{.Release.Name}}-jellyfin-finalizer"
      labels:
        app: "{{ .Release.Name }}"
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-jellyfin
          image: busybox:1.37.0
          imagePullPolicy: IfNotPresent
          command:
            [
              "sh",
              "-c",
              "until wget --spider -S -T 10 \"http://{{ .Release.Name }}-jellyfin.{{ .Release.Namespace }}.svc.cluster.local:8096\" 2>&1 | grep -qw '200\\|301\\|302' > /dev/null ; do echo Waiting for servarr-jellyfin ; sleep 5 ; done ; sleep 10 ;",
            ]
      containers:
        - name: initialize-jellyfin
          image: python:3.10
          imagePullPolicy: IfNotPresent
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: JELLYFIN_HOST
              value: "{{ .Release.Name }}-jellyfin.{{ .Release.Namespace }}.svc.cluster.local:8096"
            - name: JELLYFIN_USERNAME
              value: "{{ $.Values.dash.username }}"
            - name: JELLYFIN_PASSWORD
              value: "{{ $.Values.dash.password }}"
            - name: COUNTRY_CODE
              value: "{{ $.Values.dash.countryCode }}"
            - name: PREFERRED_LANGUAGE
              value: "{{ $.Values.dash.preferredLanguage }}"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "pip install requests && python3 -u /mnt/init-jellyfin.py 2>&1;"
          volumeMounts:
            - mountPath: "/mnt"
              name: python-script
      volumes:
        - name: python-script
          configMap:
            name: init-jellyfin-script
